{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mosfe\\\\Documents\\\\webPJT\\\\V4\\\\ProjectWachi-main\\\\WebWachi\\\\src\\\\pages\\\\ManageClass.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { db } from \"../firebase\";\nimport { doc, getDoc, collection, query, getDocs } from \"firebase/firestore\";\nimport { QRCodeCanvas } from \"qrcode.react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageClass = () => {\n  _s();\n  const {\n    classId\n  } = useParams();\n  const navigate = useNavigate();\n  const [classInfo, setClassInfo] = useState(null);\n  const [checkins, setCheckins] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [showStudents, setShowStudents] = useState(false);\n  const [checkinStudents, setCheckinStudents] = useState(null);\n  const [studentsMap, setStudentsMap] = useState({}); // *** เพิ่ม state สำหรับเก็บข้อมูลนักศึกษา Map\n\n  useEffect(() => {\n    const fetchClassData = async () => {\n      if (!classId) return;\n      const classRef = doc(db, \"classroom\", classId);\n      const classSnap = await getDoc(classRef);\n      if (classSnap.exists()) {\n        setClassInfo(classSnap.data());\n      } else {\n        console.error(\"Class not found\");\n        navigate(\"/dashboard\");\n      }\n    };\n    const fetchCheckins = async () => {\n      const checkinQuery = query(collection(db, `classroom/${classId}/checkin`));\n      const checkinSnapshot = await getDocs(checkinQuery);\n      const checkinData = await Promise.all(checkinSnapshot.docs.map(async docSnap => {\n        const checkinInfo = docSnap.data();\n\n        // ดึงข้อมูลคำถาม (question_text) จาก document ของ check-in\n        const checkinRef = doc(db, `classroom/${classId}/checkin`, docSnap.id);\n        const checkinDoc = await getDoc(checkinRef);\n        const questionText = checkinDoc.exists() ? checkinDoc.data().question_text : \"No question\"; // Default value\n\n        const answersData = await fetchAnswers(docSnap.id);\n        const studentsQuery = query(collection(db, `classroom/${classId}/checkin/${docSnap.id}/students`));\n        const studentsSnapshot = await getDocs(studentsQuery);\n        const studentsInThisCheckin = studentsSnapshot.docs.map(studentDoc => studentDoc.data());\n        return {\n          id: docSnap.id,\n          ...checkinInfo,\n          question: questionText,\n          // เพิ่ม question เข้าไปในข้อมูล check-in\n          studentCount: studentsInThisCheckin.length,\n          students: studentsInThisCheckin,\n          answers: answersData\n        };\n      }));\n      setCheckins(checkinData);\n    };\n    const fetchAnswers = async checkinId => {\n      const answersCollection = collection(db, `classroom/${classId}/checkin/${checkinId}/answers`);\n      const answersSnapshot = await getDocs(answersCollection);\n      const answersData = {};\n      for (const answerDoc of answersSnapshot.docs) {\n        const answerData = answerDoc.data(); // { text: \"...\", time: \"...\" }\n        // วนลูปผ่านแต่ละ field ที่เป็น student id\n        if (answerData.students) {\n          for (const studentId in answerData.students) {\n            if (answerData.students.hasOwnProperty(studentId)) {\n              const studentAnswer = answerData.students[studentId];\n\n              // สร้างโครงสร้างข้อมูล answers ให้เหมาะสมกับการใช้งาน\n              if (!answersData[studentId]) {\n                answersData[studentId] = {};\n              }\n              answersData[studentId][answerDoc.id] = studentAnswer; // เก็บคำตอบของนักศึกษาแต่ละคนในแต่ละคำถาม\n            }\n          }\n        }\n      }\n      return answersData;\n    };\n    const fetchStudents = async () => {\n      const studentQuery = query(collection(db, `classroom/${classId}/students`));\n      const studentSnapshot = await getDocs(studentQuery);\n\n      // สร้าง Map ของนักศึกษา\n      const studentMapData = {};\n      studentSnapshot.docs.forEach(docSnap => {\n        studentMapData[docSnap.id] = {\n          id: docSnap.id,\n          ...docSnap.data()\n        };\n      });\n      setStudentsMap(studentMapData); // เก็บ Map ลง state\n      setStudents(Object.values(studentMapData)); // เก็บ Array ของนักศึกษา (เผื่อใช้แบบเดิม)\n    };\n    fetchClassData();\n    fetchCheckins();\n    fetchStudents();\n  }, [classId, navigate]);\n  const handleStartCheckIn = () => {\n    navigate(`/checkin/${classId}`);\n  };\n  const handleViewCheckinStudents = checkinId => {\n    const selectedCheckin = checkins.find(checkin => checkin.id === checkinId);\n    if (selectedCheckin) {\n      // สร้าง Array ของนักศึกษา พร้อมข้อมูลคะแนนและคำตอบ\n      const studentsWithAnswersAndScores = selectedCheckin.students.map(student => {\n        let studentAnswers = {};\n        if (selectedCheckin.answers && selectedCheckin.answers[student.stdid]) {\n          studentAnswers = selectedCheckin.answers[student.stdid];\n        }\n\n        // ดึงข้อมูลคะแนนจาก collection \"scores\" *******************************\n        // (สมมติว่ามี field ชื่อ 'score' ใน document ของนักเรียนแต่ละคน)\n        let studentScore = 0; // ค่าเริ่มต้น\n        const getStudentScore = async () => {\n          const scoreRef = doc(db, `classroom/${classId}/checkin/${checkinId}/scores`, student.stdid);\n          const scoreSnap = await getDoc(scoreRef);\n          if (scoreSnap.exists()) {\n            studentScore = scoreSnap.data().score || 0; // เอา score หรือถ้าไม่มีก็ใช้ 0\n          }\n          return {\n            ...student,\n            answers: studentAnswers,\n            score: studentScore // เพิ่มคะแนนเข้าไป\n          };\n        };\n        return getStudentScore();\n      });\n      // ใช้ Promise.all รอให้ดึงคะแนนของทุกคนเสร็จ *************************\n      Promise.all(studentsWithAnswersAndScores).then(completedStudents => {\n        setCheckinStudents(completedStudents);\n      });\n    } else {\n      setCheckinStudents([]);\n    }\n  };\n\n  // ไม่ต้องใช้ findStudentById แล้ว ใช้ studentsMap โดยตรง ************************\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4 text-center\",\n      children: \"\\u0E08\\u0E31\\u0E14\\u0E01\\u0E32\\u0E23\\u0E2B\\u0E49\\u0E2D\\u0E07\\u0E40\\u0E23\\u0E35\\u0E22\\u0E19\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), classInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [classInfo.info.name, \" (\", classInfo.info.code, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(QRCodeCanvas, {\n          value: `${window.location.origin}/register/${classId}`,\n          size: 180\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary mb-3\",\n      onClick: handleStartCheckIn,\n      children: \"\\u0E40\\u0E23\\u0E34\\u0E48\\u0E21\\u0E40\\u0E0A\\u0E47\\u0E04\\u0E0A\\u0E37\\u0E48\\u0E2D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"\\u0E1B\\u0E23\\u0E30\\u0E27\\u0E31\\u0E15\\u0E34\\u0E01\\u0E32\\u0E23\\u0E40\\u0E0A\\u0E47\\u0E04\\u0E0A\\u0E37\\u0E48\\u0E2D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0E27\\u0E31\\u0E19-\\u0E40\\u0E27\\u0E25\\u0E32\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0E04\\u0E33\\u0E16\\u0E32\\u0E21\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0E08\\u0E33\\u0E19\\u0E27\\u0E19\\u0E04\\u0E19\\u0E40\\u0E02\\u0E49\\u0E32\\u0E40\\u0E23\\u0E35\\u0E22\\u0E19\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0E2A\\u0E16\\u0E32\\u0E19\\u0E30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0E14\\u0E39\\u0E23\\u0E32\\u0E22\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E19\\u0E31\\u0E01\\u0E28\\u0E36\\u0E01\\u0E29\\u0E32\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: checkins.map((record, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.studentCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.status === 1 ? \"กำลังเรียน\" : \"เสร็จสิ้น\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-info\",\n              onClick: () => handleViewCheckinStudents(record.id),\n              children: \"\\u0E14\\u0E39\\u0E23\\u0E32\\u0E22\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E19\\u0E31\\u0E01\\u0E28\\u0E36\\u0E01\\u0E29\\u0E32\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), checkinStudents && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"\\u0E23\\u0E32\\u0E22\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E19\\u0E31\\u0E01\\u0E28\\u0E36\\u0E01\\u0E29\\u0E32\\u0E17\\u0E35\\u0E48\\u0E40\\u0E0A\\u0E47\\u0E04\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E43\\u0E19\\u0E23\\u0E2D\\u0E1A\\u0E19\\u0E35\\u0E49\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0E23\\u0E2B\\u0E31\\u0E2A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0E0A\\u0E37\\u0E48\\u0E2D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0E04\\u0E33\\u0E15\\u0E2D\\u0E1A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0E04\\u0E30\\u0E41\\u0E19\\u0E19\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: checkinStudents.map((student, index) => {\n            const studentInfo = studentsMap[student.stdid]; // ใช้ stdid เป็น key *************\n\n            return studentInfo ? /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: studentInfo.stdid\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: studentInfo.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: Object.keys(student.answers).map(questionId => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: student.answers[questionId].text || \"ไม่มีคำตอบ\"\n                }, questionId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: student.score\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 21\n              }, this), \" \"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this) : null;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-secondary mt-3\",\n      onClick: () => navigate(\"/dashboard\"),\n      children: \"\\u0E01\\u0E25\\u0E31\\u0E1A\\u0E44\\u0E1B Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-info mt-3 ms-2\",\n      onClick: () => setShowStudents(!showStudents),\n      children: showStudents ? \"ซ่อนรายชื่อนักศึกษา\" : \"แสดงรายชื่อนักศึกษา\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), showStudents && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"\\u0E23\\u0E32\\u0E22\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E19\\u0E31\\u0E01\\u0E28\\u0E36\\u0E01\\u0E29\\u0E32\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0E23\\u0E2B\\u0E31\\u0E2A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0E0A\\u0E37\\u0E48\\u0E2D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0E23\\u0E39\\u0E1B\\u0E20\\u0E32\\u0E1E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: students.map((student, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.stdid\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: student.photo,\n                alt: \"Student\",\n                width: \"50\",\n                height: \"50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageClass, \"ycmLF0qlzQa8F4re6ah5Bq4Q4SE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ManageClass;\nexport default ManageClass;\nvar _c;\n$RefreshReg$(_c, \"ManageClass\");","map":{"version":3,"names":["useState","useEffect","useParams","useNavigate","db","doc","getDoc","collection","query","getDocs","QRCodeCanvas","jsxDEV","_jsxDEV","ManageClass","_s","classId","navigate","classInfo","setClassInfo","checkins","setCheckins","students","setStudents","showStudents","setShowStudents","checkinStudents","setCheckinStudents","studentsMap","setStudentsMap","fetchClassData","classRef","classSnap","exists","data","console","error","fetchCheckins","checkinQuery","checkinSnapshot","checkinData","Promise","all","docs","map","docSnap","checkinInfo","checkinRef","id","checkinDoc","questionText","question_text","answersData","fetchAnswers","studentsQuery","studentsSnapshot","studentsInThisCheckin","studentDoc","question","studentCount","length","answers","checkinId","answersCollection","answersSnapshot","answerDoc","answerData","studentId","hasOwnProperty","studentAnswer","fetchStudents","studentQuery","studentSnapshot","studentMapData","forEach","Object","values","handleStartCheckIn","handleViewCheckinStudents","selectedCheckin","find","checkin","studentsWithAnswersAndScores","student","studentAnswers","stdid","studentScore","getStudentScore","scoreRef","scoreSnap","score","then","completedStudents","className","children","fileName","_jsxFileName","lineNumber","columnNumber","info","name","code","value","window","location","origin","size","onClick","record","index","date","status","studentInfo","keys","questionId","text","src","photo","alt","width","height","_c","$RefreshReg$"],"sources":["C:/Users/mosfe/Documents/webPJT/V4/ProjectWachi-main/WebWachi/src/pages/ManageClass.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { db } from \"../firebase\";\r\nimport { doc, getDoc, collection, query, getDocs } from \"firebase/firestore\";\r\nimport { QRCodeCanvas } from \"qrcode.react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst ManageClass = () => {\r\n  const { classId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [classInfo, setClassInfo] = useState(null);\r\n  const [checkins, setCheckins] = useState([]);\r\n  const [students, setStudents] = useState([]);\r\n  const [showStudents, setShowStudents] = useState(false);\r\n  const [checkinStudents, setCheckinStudents] = useState(null);\r\n  const [studentsMap, setStudentsMap] = useState({}); // *** เพิ่ม state สำหรับเก็บข้อมูลนักศึกษา Map\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchClassData = async () => {\r\n      if (!classId) return;\r\n      const classRef = doc(db, \"classroom\", classId);\r\n      const classSnap = await getDoc(classRef);\r\n      if (classSnap.exists()) {\r\n        setClassInfo(classSnap.data());\r\n      } else {\r\n        console.error(\"Class not found\");\r\n        navigate(\"/dashboard\");\r\n      }\r\n    };\r\n\r\n    const fetchCheckins = async () => {\r\n      const checkinQuery = query(collection(db, `classroom/${classId}/checkin`));\r\n      const checkinSnapshot = await getDocs(checkinQuery);\r\n\r\n      const checkinData = await Promise.all(\r\n        checkinSnapshot.docs.map(async (docSnap) => {\r\n          const checkinInfo = docSnap.data();\r\n\r\n          // ดึงข้อมูลคำถาม (question_text) จาก document ของ check-in\r\n          const checkinRef = doc(db, `classroom/${classId}/checkin`, docSnap.id);\r\n          const checkinDoc = await getDoc(checkinRef);\r\n          const questionText = checkinDoc.exists() ? checkinDoc.data().question_text : \"No question\"; // Default value\r\n\r\n          const answersData = await fetchAnswers(docSnap.id);\r\n          const studentsQuery = query(\r\n            collection(db, `classroom/${classId}/checkin/${docSnap.id}/students`)\r\n          );\r\n          const studentsSnapshot = await getDocs(studentsQuery);\r\n          const studentsInThisCheckin = studentsSnapshot.docs.map(\r\n            (studentDoc) => studentDoc.data()\r\n          );\r\n\r\n          return {\r\n            id: docSnap.id,\r\n            ...checkinInfo,\r\n            question: questionText, // เพิ่ม question เข้าไปในข้อมูล check-in\r\n            studentCount: studentsInThisCheckin.length,\r\n            students: studentsInThisCheckin,\r\n            answers: answersData,\r\n          };\r\n        })\r\n      );\r\n\r\n      setCheckins(checkinData);\r\n    };\r\n\r\n    const fetchAnswers = async (checkinId) => {\r\n      const answersCollection = collection(db, `classroom/${classId}/checkin/${checkinId}/answers`);\r\n      const answersSnapshot = await getDocs(answersCollection);\r\n\r\n      const answersData = {};\r\n      for (const answerDoc of answersSnapshot.docs) {\r\n        const answerData = answerDoc.data();  // { text: \"...\", time: \"...\" }\r\n        // วนลูปผ่านแต่ละ field ที่เป็น student id\r\n        if (answerData.students) {\r\n          for (const studentId in answerData.students) {\r\n            if (answerData.students.hasOwnProperty(studentId)) {\r\n              const studentAnswer = answerData.students[studentId];\r\n\r\n              // สร้างโครงสร้างข้อมูล answers ให้เหมาะสมกับการใช้งาน\r\n              if (!answersData[studentId]) {\r\n                answersData[studentId] = {};\r\n              }\r\n              answersData[studentId][answerDoc.id] = studentAnswer; // เก็บคำตอบของนักศึกษาแต่ละคนในแต่ละคำถาม\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return answersData;\r\n    };\r\n\r\n    const fetchStudents = async () => {\r\n      const studentQuery = query(collection(db, `classroom/${classId}/students`));\r\n      const studentSnapshot = await getDocs(studentQuery);\r\n\r\n      // สร้าง Map ของนักศึกษา\r\n      const studentMapData = {};\r\n      studentSnapshot.docs.forEach((docSnap) => {\r\n        studentMapData[docSnap.id] = {\r\n          id: docSnap.id,\r\n          ...docSnap.data(),\r\n        };\r\n      });\r\n      setStudentsMap(studentMapData); // เก็บ Map ลง state\r\n      setStudents(Object.values(studentMapData));  // เก็บ Array ของนักศึกษา (เผื่อใช้แบบเดิม)\r\n    };\r\n\r\n\r\n    fetchClassData();\r\n    fetchCheckins();\r\n    fetchStudents();\r\n  }, [classId, navigate]);\r\n\r\n  const handleStartCheckIn = () => {\r\n    navigate(`/checkin/${classId}`);\r\n  };\r\n\r\n  const handleViewCheckinStudents = (checkinId) => {\r\n    const selectedCheckin = checkins.find((checkin) => checkin.id === checkinId);\r\n\r\n    if (selectedCheckin) {\r\n      // สร้าง Array ของนักศึกษา พร้อมข้อมูลคะแนนและคำตอบ\r\n      const studentsWithAnswersAndScores = selectedCheckin.students.map((student) => {\r\n        let studentAnswers = {};\r\n        if (selectedCheckin.answers && selectedCheckin.answers[student.stdid]) {\r\n          studentAnswers = selectedCheckin.answers[student.stdid];\r\n        }\r\n\r\n        // ดึงข้อมูลคะแนนจาก collection \"scores\" *******************************\r\n        // (สมมติว่ามี field ชื่อ 'score' ใน document ของนักเรียนแต่ละคน)\r\n        let studentScore = 0; // ค่าเริ่มต้น\r\n        const getStudentScore = async () => {\r\n          const scoreRef = doc(db, `classroom/${classId}/checkin/${checkinId}/scores`, student.stdid);\r\n          const scoreSnap = await getDoc(scoreRef);\r\n          if (scoreSnap.exists()) {\r\n            studentScore = scoreSnap.data().score || 0; // เอา score หรือถ้าไม่มีก็ใช้ 0\r\n          }\r\n          return {\r\n              ...student,\r\n              answers: studentAnswers,\r\n              score: studentScore, // เพิ่มคะแนนเข้าไป\r\n            };\r\n        }\r\n        return getStudentScore();\r\n      });\r\n      // ใช้ Promise.all รอให้ดึงคะแนนของทุกคนเสร็จ *************************\r\n      Promise.all(studentsWithAnswersAndScores).then(completedStudents => {\r\n        setCheckinStudents(completedStudents);\r\n      });\r\n\r\n    } else {\r\n      setCheckinStudents([]);\r\n    }\r\n  };\r\n\r\n  // ไม่ต้องใช้ findStudentById แล้ว ใช้ studentsMap โดยตรง ************************\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1 className=\"mb-4 text-center\">จัดการห้องเรียน</h1>\r\n      {classInfo && (\r\n        <div className=\"card mb-4\">\r\n          <div className=\"card-body text-center\">\r\n            <h4>{classInfo.info.name} ({classInfo.info.code})</h4>\r\n            <QRCodeCanvas value={`${window.location.origin}/register/${classId}`} size={180} />\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <button className=\"btn btn-primary mb-3\" onClick={handleStartCheckIn}>\r\n        เริ่มเช็คชื่อ\r\n      </button>\r\n\r\n      <h5>ประวัติการเช็คชื่อ</h5>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>วัน-เวลา</th>\r\n            <th>คำถาม</th> {/* เพิ่ม column คำถาม */}\r\n            <th>จำนวนคนเข้าเรียน</th>\r\n            <th>สถานะ</th>\r\n            <th>ดูรายชื่อนักศึกษา</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {checkins.map((record, index) => (\r\n            <tr key={index}>\r\n              <td>{index + 1}</td>\r\n              <td>{record.date}</td>\r\n              <td>{record.question}</td> {/* แสดงคำถาม */}\r\n              <td>{record.studentCount}</td>\r\n              <td>{record.status === 1 ? \"กำลังเรียน\" : \"เสร็จสิ้น\"}</td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-info\"\r\n                  onClick={() => handleViewCheckinStudents(record.id)}\r\n                >\r\n                  ดูรายชื่อนักศึกษา\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {checkinStudents && (\r\n        <div className=\"mt-4\">\r\n          <h5>รายชื่อนักศึกษาที่เช็คชื่อในรอบนี้</h5>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>รหัส</th>\r\n                <th>ชื่อ</th>\r\n                <th>คำตอบ</th>\r\n                <th>คะแนน</th> {/* เพิ่ม column คะแนน */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {/* ใช้ studentsMap โดยตรง */}\r\n              {checkinStudents.map((student, index) => {\r\n                const studentInfo = studentsMap[student.stdid]; // ใช้ stdid เป็น key *************\r\n\r\n                return studentInfo ? (\r\n                  <tr key={index}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{studentInfo.stdid}</td>\r\n                    <td>{studentInfo.name}</td>\r\n                    <td>\r\n                      {Object.keys(student.answers).map((questionId) => (\r\n                        <div key={questionId}>\r\n                         {/* ไม่ต้องแสดง questionId */}\r\n                          {student.answers[questionId].text || \"ไม่มีคำตอบ\"}\r\n                        </div>\r\n                      ))}\r\n                    </td>\r\n                    <td>{student.score}</td> {/* แสดงคะแนน */}\r\n                  </tr>\r\n                ) : null;\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n\r\n      <button className=\"btn btn-secondary mt-3\" onClick={() => navigate(\"/dashboard\")}>\r\n        กลับไป Dashboard\r\n      </button>\r\n\r\n      <button className=\"btn btn-info mt-3 ms-2\" onClick={() => setShowStudents(!showStudents)}>\r\n        {showStudents ? \"ซ่อนรายชื่อนักศึกษา\" : \"แสดงรายชื่อนักศึกษา\"}\r\n      </button>\r\n\r\n      {showStudents && (\r\n        <div className=\"mt-4\">\r\n          <h5>รายชื่อนักศึกษา</h5>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>รหัส</th>\r\n                <th>ชื่อ</th>\r\n                <th>รูปภาพ</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            {/* แสดงรายชื่อจาก students array ปกติ */}\r\n              {students.map((student, index) => (\r\n                <tr key={index}>\r\n                  <td>{index + 1}</td>\r\n                  <td>{student.stdid}</td>\r\n                  <td>{student.name}</td>\r\n                  <td>\r\n                    <img src={student.photo} alt=\"Student\" width=\"50\" height=\"50\" />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageClass;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}